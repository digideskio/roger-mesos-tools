#!/usr/bin/python

from __future__ import print_function
import os
import sys
sys.path.append('/vagrant/cmds')
import subprocess

def roger_help():
  print("\nUsage: roger [OPTIONS] | arg_list\n")
  print("         roger -h")
  print("         roger deploy grafana roger.json -s\n")
  print("If the args_list is provided then the first argument should be the command, followed by a list of other args that" \
        " the command takes.\n")
  print("Options:\n")
  print("  -h, --help            show this help message and exit")
  print("\nCommands:")
  print("    deploy")
  print("    git-pull")
  print("    build")
  print("    push")
  print("    init")
  print("    shell")
  print("\nRun 'roger COMMAND --help' for more information on a command.\n")

def getCommand(args):
  root = os.path.abspath(os.path.join(os.path.dirname(os.path.realpath(__file__)), '../'))
  command = args[1]
  exists = os.path.exists("{}/cmds/roger-{}".format(root, command))
  if exists == True:
    command = "roger-{}".format(command)
    for index in range(2,len(args)):
      command = command + " {}".format(args[index])
    return command
  else:
    sys.exit("Command does not exists. Exiting")

def main():

  if len(sys.argv) > 1:
    if sys.argv[1] == "-h" or sys.argv[1] == "--help":
      roger_help()
    else:
      command = getCommand(sys.argv)
      os.system(command)
  else:
    sys.exit("No arguments found. Please refer to usage: roger -h")

if __name__ == "__main__":
  main()
